generator client {
  provider = "prisma-client-js"
  // output   = "../src/app/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id         String   @id @default(uuid())
  email      String   @unique
  first_name String
  last_name  String?
  password   String
  image      String   @default("/avatar.png")
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  chats Chat[]

  @@index([email])
  @@index([created_at])
}

model Chat {
  id          String   @id @default(uuid())
  title       String
  description String
  user_id     String
  project_id  String?
  user        User     @relation(fields: [user_id], references: [id])
  project     Project? @relation(fields: [project_id], references: [id])
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  messages Message[] // Assuming each Chat has many messages

  @@index([user_id])
  @@index([created_at])
  @@index([user_id, created_at])
}

model Message {
  id        String        @id @default(uuid())
  role      Role          @default(user)
  parts     MessagePart[]
  metadata  Json?
  createdAt DateTime      @default(now())
  chat_id   String
  chat      Chat          @relation(fields: [chat_id], references: [id])

  @@index([chat_id])
  @@index([createdAt])
  @@index([chat_id, createdAt])
}

model MessagePart {
  id         String   @id @default(uuid())
  type       PartType
  text       String?
  image      String? // URL or base64 for images
  data       Json? // For other data types
  message_id String
  message    Message  @relation(fields: [message_id], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())

  @@index([message_id])
}

model Project {
  id    String @id @default(uuid())
  name  String
  color String @default("#131619")

  chats Chat[]
}

enum Role {
  user
  assistant
  system
}

enum PartType {
  text
  image
  file
  tool_call
  tool_result
}
